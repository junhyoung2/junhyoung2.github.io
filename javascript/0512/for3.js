// 변수 i를 전역 또는 블록 외부에 선언
let i = 0;

// for문 블록 안에서 i를 다시 선언 (이 i는 for문 내부에서만 유효한 지역 변수)
for (let i = 0; i < 5; i++) {
    // '*' 출력
    console.log("*");

    // 반복 횟수 출력 (for문 내부의 i)
    console.log(i);
}

// for문 바깥의 i 출력 (처음 선언한 전역/외부 i, 값은 여전히 0)
console.log(i);



// 배열 'a' 선언: '사과', '바나나', '딸기' 3개의 요소를 가진 배열
let a = ['사과', '바나나', '딸기'];

// 변수 'b' 선언: 현재 코드에서는 사용되지 않음
let b = 1;

// 배열 'a'의 첫 번째 요소 출력: '사과' (인덱스 0)
console.log(a[0]);

// 배열 'a'의 두 번째 요소 출력: '바나나' (인덱스 1)
console.log(a[1]);

// 배열 'a'의 세 번째 요소 출력: '딸기' (인덱스 2)
console.log(a[2]);

// 배열 'a'의 길이 출력: 배열에는 3개의 요소가 있으므로 3이 출력됨
console.log(a.length);

// for문을 사용하여 배열 'a'의 모든 요소를 순차적으로 출력
for (let index = 0; index < a.length; index++) {
    // 배열의 현재 인덱스에 해당하는 요소 출력
    console.log(a[index]);
}



// 1부터 9까지 2단을 출력하는 for문
for (let i = 1; i <= 9; i++) {
    // 템플릿 리터럴을 사용하여 2단의 곱셈 결과를 출력
    // 예: 2*1=2, 2*2=4, ... 2*9=18
    console.log(`2*${i}=${2*i}`);
}



// 2단부터 9단까지 구구단 출력
for (let i = 2; i <= 9; i++) {  // i는 2부터 9까지 반복
    // 현재 단을 출력 (예: *** 2 단 출력 ***)
    console.log(`*** ${i} 단 출력 ***`);
    
    // 각 단에 대해 1부터 9까지 곱셈을 출력
    for (let j = 1; j <= 9; j++) {
        // 각 구구단 곱셈 결과 출력 (예: 2 * 1 = 2)
        console.log(`${i} * ${j} = ${i * j}`);
    }
}





