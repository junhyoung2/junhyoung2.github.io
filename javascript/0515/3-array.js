// 배열을 생성하는 두 가지 방법 중 하나 (주석 처리된 코드)
// const value = new Array();  // 생성자 방식

// 1. 배열 리터럴 방식으로 빈 배열 생성
const value = [];

// 2. 배열에 인덱스를 이용해 직접 값 삽입
value[0] = '사과';
value[1] = '토마토';  // 인덱스 1에 '토마토' 저장

// 3. 배열 끝에 값 추가 (push는 마지막에 요소 삽입)
value.push('수박');  // ['사과', '토마토', '수박']

// 4. 배열 마지막 요소 제거하고 그 값을 반환
//    여기선 '수박'이 삭제되고 콘솔에 출력됨
console.log(value.pop());  // 결과: '수박'

// 5. 현재 배열 출력 → ['사과', '토마토']만 남아있음
console.log(value);  // 결과: ['사과', '토마토']

// 6. 배열 앞쪽에 요소를 삽입 (unshift는 첫 번째 위치에 삽입)
value.unshift("바나나");  // ['바나나', '사과', '토마토']
value.unshift("딸기");    // ['딸기', '바나나', '사과', '토마토']

// 7. 현재 배열 출력
console.log(value);  // 결과: ['딸기', '바나나', '사과', '토마토']

// 8. 배열의 길이(요소 개수) 출력 (필수 메서드)
console.log(value.length);  // 결과: 4

// 9. 배열에 특정 요소가 포함되어 있는지 확인
let check = value.includes("사고");  // 결과: false ('사고'는 없음)

// 10. 특정 요소가 있는 위치(index)를 반환 (없으면 -1)
check = value.indexOf("사과");  // 결과: 2

// 11. join() : 배열 요소를 문자열로 결합
//    기본 구분자는 콤마(,)지만 여기선 구분자 없이 모두 붙임
check = value.join("");  // 결과: '딸기바나나사과토마토'

// 12. 타입 확인 → 문자열로 변환되었음을 확인
console.log(typeof(check));  // 결과: string

// 13. 결합된 문자열 출력
console.log(check);  // 결과: '딸기바나나사과토마토'






///--------------------------------------------------


// 1. 배열 선언
const fruits = ['사과', '배', '바나나', '귤'];  
// 인덱스:        0      1       2      3

// 2. slice(start, end)
// - 인덱스 1부터 시작해서 인덱스 3 '직전'까지 복사 (1 이상, 3 미만)
// - 원본 배열은 변경되지 않음 (비파괴적 메서드)
let result = fruits.slice(1, 3);  
// → ['배', '바나나'] 복사됨

// 3. splice(start, deleteCount, item)
// - 인덱스 1부터 1개 요소를 삭제하고, 그 자리에 '딸기'를 삽입
// - 원본 배열이 직접 변경됨 (파괴적 메서드)
fruits.splice(1, 1, "딸기");  
// → ['사과', '딸기', '바나나', '귤']

// 4. 수정된 원본 배열 출력
console.log(fruits);  
// 결과: ['사과', '딸기', '바나나', '귤']
